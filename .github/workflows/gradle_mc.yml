# .github/workflows/gradle_mc.yml
name: Build & Test Gradle projects


on:
  push:

env:
  GRADLE_VERSION: 7.4 # Gradle version used
  GRADLE_CLI_OPTS: "-Pci --scan" # CLI option passed to Gradle


permissions:
  contents: read


jobs:
  build-generator: # Note: Build-Cache may not work yet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Build the monticore-generator
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build -p monticore-generator ${{env.GRADLE_CLI_OPTS}}

  build-mc:
    runs-on: ubuntu-latest
    needs: build-generator
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Build monticore (buildMC)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: buildMC ${{env.GRADLE_CLI_OPTS}} -PgenTR=true -PgenEMF=true -PgenTagging=true

  # first set of experiments from the handbook
  test-01-experiments:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test 01.experiments
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/01.experiments ${{env.GRADLE_CLI_OPTS}} -PgenEMF=true

  # second set of experiments from the handbook
  test-02-experiments:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test 02.experiments
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/02.experiments ${{env.GRADLE_CLI_OPTS}} -PgenEMF=true

  # test integration tests from the it project
  test-it:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test monticore-test/it
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/it ${{env.GRADLE_CLI_OPTS}}
      - name: Checking that all file handles in the target folder are closed
        run: if pgrep java | xargs -i ls -la /proc/{}/fd | grep "monticore-test/it/target/"; then echo "Found open file handles!"; exit 1; else echo "No open file handles."; exit 0; fi

  # test integration tests from the it project, using the emf profile
  test-it-emf:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test monticore-test/it with emf profile
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/it ${{env.GRADLE_CLI_OPTS}} -PbuildProfile=emf -PgenEMF=true

  # Grammar integration tests
  test-grammar-it:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test monticore-grammar-it
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/monticore-grammar-it ${{env.GRADLE_CLI_OPTS}} -PgenEMF=true

  # Transformation tests
  test-montitrans:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test monticore-grammar-it
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/montitrans ${{env.GRADLE_CLI_OPTS}} -PgenTR=true



  deploy-snapshot:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' # only run on the dev branch
    # depend on the test jobs
    needs: [ build-mc, test-01-experiments, test-02-experiments, test-it, test-it-emf, test-grammar-it, test-montitrans ]
    steps:
      - name: "TODO DEPLOY"
        run: echo "TODO!!!"
        # TODO:
# .github/workflows/gradle_mc.yml
name: Build & Test Gradle projects


on:
  push:

env:
  GRADLE_VERSION: 7.4 # Gradle version used
  GRADLE_CLI_OPTS: "-Pci --scan" # CLI option passed to Gradle


permissions:
  contents: read


jobs:
  build-generator: # Note: Build-Cache may not work yet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Build the monticore-generator
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build -p monticore-generator ${{env.GRADLE_CLI_OPTS}}

  build-mc:
    runs-on: ubuntu-latest
    needs: build-generator
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Build monticore (buildMC)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: buildMC ${{env.GRADLE_CLI_OPTS}} -PgenTR=true -PgenEMF=true -PgenTagging=true

  # first set of experiments from the handbook
  test-01-experiments:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test 01.experiments
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/01.experiments ${{env.GRADLE_CLI_OPTS}} -PgenEMF=true

  # second set of experiments from the handbook
  test-02-experiments:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test 02.experiments
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/02.experiments ${{env.GRADLE_CLI_OPTS}} -PgenEMF=true

  # test integration tests from the it project
  test-it:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test monticore-test/it
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/it ${{env.GRADLE_CLI_OPTS}}
      - name: Checking that all file handles in the target folder are closed
        run: if pgrep java | xargs -i ls -la /proc/{}/fd | grep "monticore-test/it/target/"; then echo "Found open file handles!"; exit 1; else echo "No open file handles."; exit 0; fi

  # test integration tests from the it project, using the emf profile
  test-it-emf:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test monticore-test/it with emf profile
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/it ${{env.GRADLE_CLI_OPTS}} -PbuildProfile=emf -PgenEMF=true

  # Grammar integration tests
  test-grammar-it:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test monticore-grammar-it
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/monticore-grammar-it ${{env.GRADLE_CLI_OPTS}} -PgenEMF=true

  # Transformation tests
  test-montitrans:
    runs-on: ubuntu-latest
    needs: build-mc
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Test monticore-grammar-it
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{env.GRADLE_VERSION}}
          arguments: build test -p monticore-test/montitrans ${{env.GRADLE_CLI_OPTS}} -PgenTR=true



  # Deploy the snapshot to the snapshot nexus
  deploy-snapshot:
    runs-on: ubuntu-latest
    # depend on the test jobs
    needs: [ build-mc, test-01-experiments, test-02-experiments, test-it, test-it-emf, test-grammar-it, test-montitrans ]
    if: github.ref == 'refs/heads/dev' # only run on the dev branch
    steps:
      - name: "TODO DEPLOY"
        run: echo "TODO!!!"
        # TODO: add secrets & run deploy

# TODO: FIX to specific version instead of @v3
